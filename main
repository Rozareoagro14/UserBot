import asyncio
import random
from aiogram import Bot, Dispatcher, types

API_TOKEN = '–í–ê–®_API_–¢–û–ö–ï–ù'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à API —Ç–æ–∫–µ–Ω
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /type
@dp.message_handler(commands=['type'])
async def type_text(message: types.Message):
    orig_text = message.get_args()  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /type
    if orig_text:
        tbp = ""
        typing_symbol = "‚ñí"

        # –≠–º—É–ª–∏—Ä—É–µ–º –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –ø–æ—Å–∏–º–≤–æ–ª—å–Ω–æ
        for letter in orig_text:
            tbp += letter
            await message.edit_text(tbp + typing_symbol)
            await asyncio.sleep(0.05)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ —ç–º—É–ª—è—Ü–∏–∏ –Ω–∞–±–æ—Ä–∞
        await message.edit_text(tbp)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /hack
@dp.message_handler(commands=['hack'])
async def hack_pentagon(message: types.Message):
    perc = 0
    text = "üëÆ‚Äç –í–∑–ª–æ–º –ø–µ–Ω—Ç–∞–≥–æ–Ω–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ ..."

    # –≠–º—É–ª–∏—Ä—É–µ–º –ø—Ä–æ—Ü–µ—Å—Å –≤–∑–ª–æ–º–∞ –ü–µ–Ω—Ç–∞–≥–æ–Ω–∞
    while perc < 100:
        await message.edit_text(f"{text} {perc}%")
        perc += random.randint(1, 3)
        await asyncio.sleep(0.1)

    # –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –≤–∑–ª–æ–º–µ
    await message.edit_text("üü¢ –ü–µ–Ω—Ç–∞–≥–æ–Ω —É—Å–ø–µ—à–Ω–æ –≤–∑–ª–æ–º–∞–Ω!")
    await asyncio.sleep(3)
    await message.edit_text("üëΩ –ü–æ–∏—Å–∫ —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ–± –ù–õ–û ...")

    perc = 0
    text = "üëΩ –ü–æ–∏—Å–∫ —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ–± –ù–õ–û ..."

    # –≠–º—É–ª–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –¥–∞–Ω–Ω—ã—Ö –æ –ù–õ–û
    while perc < 100:
        await message.edit_text(f"{text} {perc}%")
        perc += random.randint(1, 5)
        await asyncio.sleep(0.15)

    # –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ –¥–∏–Ω–æ–∑–∞–≤—Ä–∞—Ö
    await message.edit_text("ü¶ñ –ù–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–∏ –¥–∏–Ω–æ–∑–∞–≤—Ä–æ–≤ –Ω–∞ –∑–µ–º–ª–µ!")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /thanos
@dp.message_handler(commands=['thanos'])
async def thanos_snap(message: types.Message):
    chat_id = message.chat.id
    chat_members = await bot.get_chat_members_count(chat_id)
    to_ban = chat_members // 2
    banned = 0

    chat = await bot.get_chat(chat_id)
    chat_title = chat.title

    # –ò–º–∏—Ç–∞—Ü–∏—è –¥–µ–π—Å—Ç–≤–∏—è –¢–∞–Ω–æ—Å–∞ - –±–∞–Ω –ø–æ–ª–æ–≤–∏–Ω—ã —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞
    await message.reply(f"–©–µ–ª—á–æ–∫ –¢–∞–Ω–æ—Å–∞ –≤ —á–∞—Ç–µ {chat_title}... *—â—ë–ª–∫*")

    async for member in bot.iter_chat_members(chat_id):
        if not member.is_chat_creator() and not member.is_chat_admin():
            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–∞ —á–∞—Ç–∞
            await bot.restrict_chat_member(
                chat_id,
                member.user.id,
                types.ChatPermissions(),
                until_date=int(time.time()) + 86400,
            )
            banned += 1
            await message.reply(f"–ò—Å—á–µ–∑ {member.user.first_name}")

            if banned >= to_ban:
                break

    await message.reply("–ù–æ –∫–∞–∫–æ–π —Ü–µ–Ω–æ–π?")

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
if __name__ == '__main__':
    asyncio.run(dp.start_polling())
